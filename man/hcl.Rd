% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parse_hcl.R
\name{hcl}
\alias{hcl}
\alias{lch}
\title{HCL Color Specification}
\usage{
hcl(h = 0, c = 0.6, l = 0.6, alpha = NULL, ...)

lch(l = 0.6, c = 0.6, h = 0)
}
\arguments{
\item{h}{hue, numeric vector with values in \code{[0, 360]}.}

\item{c}{chromacity, numeric vector with values in \code{[0, ~1]}; 0 is grey, ~1 is full color.}

\item{l}{lightness, numeric vector with values in \code{[0, 1]}; 0 is black, 1 is white.}

\item{alpha}{transparency, numeric vector with values in \code{[0, 1]}; 0 means fully transparent, 1 means fully opaque. See function \code{\link{alpha}} for another way to change the transparency after the fact.}
}
\value{
A vector of colors specified as hex codes
}
\description{
Create a vector of colors from hue, chromacity, and lightness. The arguments are compatible with the \code{\link[grDevices]{hcl}} function, included with R in package \code{grDevices}, but the conventions and output are slightly different.
}
\details{
The first argument can also be a data.frame or a matrix. In that case, its columns are considered as the color components, taken in order, and the other color components arguments are ignored.

When separate arguments are used for the color components and are vectors, values in shorter arguments are recycled to match the length of the longest argument. If the lengths are not compatible, an error is output.

In HCL space, the perceived color (hue) is completely separated from the perceived intensity (chromacity) and lightness of the color. This means that colors of various hues but same chromacity and lightness appear as the exact same grey when converted to black and white. This makes the HCL space particularly suitable to create good color palettes:
\itemize{
  \item For qualitative palettes (discrete variables): varying h at constant c and l avoids drawing attention to certain hues as it would happen if the same was done in HSV or HSL space. Indeed, some hues are perceived as brighter (yellow, light green, etc.), others as duller/darker (blues, etc.).
  \item For sequential palettes (continuous variables): varying l (or possibly c) for a constant h gives a sense of direction and avoid the many perceptual pitfalls typical of 'rainbow'-like scales.
}
}
\examples{
hcl()
hcl(330, 1, 0.6)
hcl(data.frame(c(330, 340), c(1,1), c(0.6, 0.4)))
hcl(matrix(c(330, 340, 1, 1, 0.6, 0.4), ncol=3))
hcl(c(330, 340), 1, 0.6)

# compare color palettes
ramp <- seq(0, 1, length.out=10)
show_col(hcl(h=ramp*360), hsv(h=ramp*360, s=0.9), hsl(h=ramp*360, s=0.9))
show_col(hcl(c=ramp))
show_col(hcl(l=ramp))

# nice color palettes
show_col(
  hcl(h=80+ramp*240, c=0.2+ramp*0.4, l=0.9-ramp*0.6),
  hcl(h=240-ramp*120, c=0.5, l=ramp*0.9),
  hcl(h=0+ramp*80, c=0.6-ramp*0.4, l=0.1+ramp*0.8),
  hcl(h=210+ramp*150, c=0.3, l=0.1+ramp*0.5)
)

}
\seealso{
See \code{\link{parse_color}} for the general function to parse colors in various specifications (which this function calls internally) and \code{\link{convert_color}} to convert parsed colors to another model.

Other color specifications: \code{\link{cmyk}},
  \code{\link{css}}, \code{\link{hex}}, \code{\link{hsi}},
  \code{\link{hsl}}, \code{\link{hsv}}, \code{\link{lab}},
  \code{\link{parse_color}}, \code{\link{rgb}},
  \code{\link{temperature}}
}

